{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joel\\\\Documents\\\\Mini-Turbo-Derby\\\\mini-turbo-derby\\\\src\\\\Track.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Track = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TRACK!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startRace,\n      children: \"Start Race!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Go back!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}; // car constructor\n\n\n_c = Track;\n\nclass Car extends Component {\n  constructor(name, speed, weight, acceleration, lane, isBet) {\n    super();\n    this.name = name;\n    this.speed = speed;\n    this.weight = weight;\n    this.acceleration = acceleration;\n    this.lane = lane;\n    this.isBet = isBet;\n    this.setBet = this.setBet.bind(this);\n  }\n\n  setBet() {\n    this.isBet = true;\n    console.log(this.name, this.isBet);\n  }\n\n} // cars\n\n\nconst car1 = new Car(1, 100, 200, 5, 1, true);\nconst car2 = new Car(2, 120, 300, 2, 2, false);\nconst car3 = new Car(3, 90, 150, 7, 3, false); // powerup constructor\n\nfunction powerUp(boost, duration, price) {\n  this.boost = boost;\n  this.duration = duration;\n  this.price = price;\n} // powerups\n\n\nconst supremeFuel = new powerUp(1.25, 2000, 50);\nconst turboBoost = new powerUp(1.5, 4000, 100);\nlet lane1Counter;\nlet lane2Counter;\nlet lane3Counter;\nlet interval1Speed;\nlet interval2Speed;\nlet interval3Speed;\nlet powerUpInterval;\nlet startTime; // start race & set interval speeds\n\nconst startRace = () => {\n  startTime = Date.now();\n  interval1Speed = 10000 / car1.speed;\n  interval2Speed = 10000 / car2.speed;\n  interval3Speed = 10000 / car3.speed;\n  lane1Counter = setInterval(car1Counter, interval1Speed);\n  lane2Counter = setInterval(car2Counter, interval2Speed);\n  lane3Counter = setInterval(car3Counter, interval3Speed);\n  powerUpInterval = setInterval(powerUpPosition, 100);\n};\n\nlet lapCount = 0;\nlet i = 0;\nlet lapCount2 = 0;\nlet c = 0;\nlet lapCount3 = 0;\nlet x = 0; // car timers\n\nconst car1Counter = () => {\n  if (i < 10) {\n    i++;\n    console.log(\"Car1 Position:\", i);\n  } else if (i === 10) {\n    if (lapCount < 3) {\n      lapCount += 1;\n      console.log(\"Car1 Lap:\", lapCount);\n    } else if (lapCount === 3) {\n      clearInterval(lane1Counter);\n      let finishTime = (Date.now() - startTime) / 1000;\n      console.log(\"Car1 has finished the race in\", finishTime, \"seconds\");\n    }\n\n    i = 0;\n  }\n};\n\nconst car2Counter = () => {\n  if (c < 10) {\n    c++;\n    console.log(\"Car2 Position:\", c);\n  } else if (c === 10) {\n    if (lapCount2 < 3) {\n      lapCount2 += 1;\n      console.log(\"Car2 Lap:\", lapCount2);\n    } else if (lapCount2 === 3) {\n      console.log(\"Car2 has finished the race!\");\n      clearInterval(lane2Counter);\n    }\n\n    c = 0;\n  }\n};\n\nconst car3Counter = () => {\n  if (x < 10) {\n    x++;\n    console.log(\"Car3 Position:\", x);\n  } else if (x === 10) {\n    if (lapCount3 < 3) {\n      lapCount3 += 1;\n      console.log(\"Car3 Lap:\", lapCount3);\n    } else if (lapCount3 === 3) {\n      console.log(\"Car3 has finished the race!\");\n      clearInterval(lane3Counter);\n    }\n\n    x = 0;\n  }\n}; // powerup rng\n\n\nlet positionSpawn = () => {\n  return Math.floor(Math.random() * (10 - 1 + 1)) + 1;\n};\n\nlet laneSpawn = () => {\n  return Math.floor(Math.random() * (3 - 1 + 1)) + 1;\n}; // powerup position & usage\n\n\nconst powerUpPosition = () => {\n  let randPosition = positionSpawn();\n  let randLane = laneSpawn();\n\n  if (randPosition === i && randLane === 1) {\n    console.log(\"Car1 collected SUPREME FUEL!\");\n    clearInterval(lane1Counter);\n    lane1Counter = setInterval(car1Counter, 70);\n    setTimeout(lane1Counter, 200);\n  }\n\n  if (randPosition === c && randLane === 2) {\n    console.log(\"Car2 collected SUPREME FUEL!\");\n    clearInterval(lane2Counter);\n    lane2Counter = setInterval(car2Counter, 70);\n    setTimeout(lane2Counter, 200);\n  }\n\n  if (randPosition === x && randLane === 3) {\n    console.log(\"Car3 collected SUPREME FUEL!\");\n    clearInterval(lane3Counter);\n    lane3Counter = setInterval(car3Counter, 70);\n    setTimeout(lane3Counter, 200);\n  }\n};\n\nexport default Track;\n\nvar _c;\n\n$RefreshReg$(_c, \"Track\");","map":{"version":3,"sources":["C:/Users/Joel/Documents/Mini-Turbo-Derby/mini-turbo-derby/src/Track.js"],"names":["React","Component","Link","Track","startRace","Car","constructor","name","speed","weight","acceleration","lane","isBet","setBet","bind","console","log","car1","car2","car3","powerUp","boost","duration","price","supremeFuel","turboBoost","lane1Counter","lane2Counter","lane3Counter","interval1Speed","interval2Speed","interval3Speed","powerUpInterval","startTime","Date","now","setInterval","car1Counter","car2Counter","car3Counter","powerUpPosition","lapCount","i","lapCount2","c","lapCount3","x","clearInterval","finishTime","positionSpawn","Math","floor","random","laneSpawn","randPosition","randLane","setTimeout"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nconst Track = () => {\r\n    return(\r\n        <div>\r\n            <h1>TRACK!</h1>\r\n            <button onClick={startRace}>Start Race!</button>\r\n            <Link to=\"/\">\r\n                <button>\r\n                    Go back!\r\n                </button>\r\n            </Link>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n// car constructor\r\nclass Car extends Component {\r\n    constructor(name, speed, weight, acceleration, lane, isBet) {\r\n        super();\r\n        this.name = name;\r\n        this.speed = speed;\r\n        this.weight = weight;\r\n        this.acceleration = acceleration;\r\n        this.lane = lane;\r\n        this.isBet = isBet;\r\n        this.setBet = this.setBet.bind(this);\r\n    }\r\n\r\n    setBet() {\r\n        this.isBet = true;\r\n        console.log(this.name, this.isBet);\r\n    }\r\n} \r\n\r\n// cars\r\nconst car1 = new Car(1, 100, 200, 5, 1, true);\r\n\r\nconst car2 = new Car(2, 120, 300, 2, 2, false);\r\n\r\nconst car3 = new Car(3, 90, 150, 7, 3, false);\r\n\r\n// powerup constructor\r\nfunction powerUp(boost, duration, price) {\r\n    this.boost = boost;\r\n    this.duration = duration;\r\n    this.price = price;\r\n}\r\n// powerups\r\nconst supremeFuel = new powerUp(1.25, 2000, 50);\r\n\r\nconst turboBoost = new powerUp(1.5, 4000, 100);\r\n\r\n\r\nlet lane1Counter;\r\nlet lane2Counter;\r\nlet lane3Counter;\r\nlet interval1Speed;\r\nlet interval2Speed;\r\nlet interval3Speed;\r\nlet powerUpInterval;\r\nlet startTime;\r\n\r\n// start race & set interval speeds\r\nconst startRace = () => {\r\n    startTime = Date.now();\r\n    interval1Speed = 10000 / car1.speed;\r\n    interval2Speed = 10000/ car2.speed;\r\n    interval3Speed = 10000/ car3.speed;\r\n    lane1Counter = setInterval(car1Counter, interval1Speed);\r\n    lane2Counter = setInterval(car2Counter, interval2Speed);\r\n    lane3Counter = setInterval(car3Counter, interval3Speed);\r\n    powerUpInterval = setInterval(powerUpPosition, 100);\r\n}\r\n\r\n\r\nlet lapCount = 0;\r\nlet i = 0;\r\n\r\nlet lapCount2 = 0;\r\nlet c = 0;\r\n\r\nlet lapCount3 = 0;\r\nlet x = 0;\r\n\r\n// car timers\r\nconst car1Counter = () => {\r\n    if (i < 10) {\r\n        i++;\r\n        console.log(\"Car1 Position:\", i);\r\n    } else if (i === 10) {\r\n        if (lapCount < 3) {\r\n            lapCount += 1;\r\n            console.log(\"Car1 Lap:\", lapCount);\r\n        } else if (lapCount === 3) {\r\n            clearInterval(lane1Counter);\r\n            let finishTime = (Date.now() - startTime) / 1000;\r\n            console.log(\"Car1 has finished the race in\", finishTime,\"seconds\");\r\n        }\r\n        i = 0;\r\n    }\r\n}\r\n\r\nconst car2Counter = () => {\r\n    if (c < 10) {\r\n        c++;\r\n        console.log(\"Car2 Position:\", c);\r\n    } else if (c === 10) {\r\n        if (lapCount2 < 3) {\r\n            lapCount2 += 1;\r\n            console.log(\"Car2 Lap:\", lapCount2);\r\n        } else if (lapCount2 === 3) {\r\n            console.log(\"Car2 has finished the race!\");\r\n            clearInterval(lane2Counter);\r\n        }\r\n        c = 0;\r\n    }\r\n}\r\n\r\nconst car3Counter = () => {\r\n    if (x < 10) {\r\n        x++;\r\n        console.log(\"Car3 Position:\", x);\r\n    } else if (x === 10) {\r\n        if (lapCount3 < 3) {\r\n            lapCount3 += 1;\r\n            console.log(\"Car3 Lap:\", lapCount3);\r\n        } else if (lapCount3 === 3) {\r\n            console.log(\"Car3 has finished the race!\");\r\n            clearInterval(lane3Counter);\r\n        }\r\n        x = 0;\r\n    }\r\n}\r\n\r\n// powerup rng\r\nlet positionSpawn = () => {\r\n    return Math.floor(Math.random() * (10 - 1 + 1)) + 1;\r\n}\r\n\r\nlet laneSpawn = () => {\r\n    return Math.floor(Math.random() * (3 - 1 + 1)) + 1;\r\n}\r\n\r\n// powerup position & usage\r\nconst powerUpPosition = () => {\r\n    let randPosition = positionSpawn();\r\n    let randLane = laneSpawn();\r\n\r\n    if (randPosition === i && randLane === 1) {\r\n        console.log(\"Car1 collected SUPREME FUEL!\");\r\n        clearInterval(lane1Counter);\r\n        lane1Counter = setInterval(car1Counter, 70);\r\n        setTimeout(lane1Counter, 200);\r\n    \r\n    } if (randPosition === c && randLane === 2) {\r\n        console.log(\"Car2 collected SUPREME FUEL!\");\r\n        clearInterval(lane2Counter);\r\n        lane2Counter = setInterval(car2Counter, 70);\r\n        setTimeout(lane2Counter, 200);\r\n  \r\n    } if (randPosition === x && randLane === 3) {\r\n        console.log(\"Car3 collected SUPREME FUEL!\");\r\n        clearInterval(lane3Counter);\r\n        lane3Counter = setInterval(car3Counter, 70);\r\n        setTimeout(lane3Counter, 200);\r\n    }\r\n} \r\n\r\nexport default Track;"]},"metadata":{},"sourceType":"module"}