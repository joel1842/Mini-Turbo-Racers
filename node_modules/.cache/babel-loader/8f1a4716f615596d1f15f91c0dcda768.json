{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joel\\\\Documents\\\\Mini-Turbo-Derby\\\\mini-turbo-derby\\\\src\\\\Track.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\"; // car constructor\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Car extends Component {\n  constructor(name, speed, time, weight, acceleration, lane, isBet) {\n    super();\n    this.name = name;\n    this.speed = speed;\n    this.time = time;\n    this.weight = weight;\n    this.acceleration = acceleration;\n    this.lane = lane;\n    this.isBet = isBet;\n    this.setBet = this.setBet.bind(this);\n  }\n\n  setBet() {\n    this.isBet = true;\n    console.log(this.name, this.isBet);\n  }\n\n} // cars\n\n\nconst car1 = new Car(1, 100, 0, 200, 5, 1, true);\nconst car2 = new Car(2, 1200, 0, 300, 2, 2, false);\nconst car3 = new Car(3, 90, 0, 150, 7, 3, false); // powerup constructor\n\nfunction powerUp(boost, duration, price) {\n  this.boost = boost;\n  this.duration = duration;\n  this.price = price;\n} // powerups\n\n\nconst supremeFuel = new powerUp(1.25, 2000, 50);\nconst turboBoost = new powerUp(1.5, 4000, 100);\nlet lane1Counter;\nlet lane2Counter;\nlet lane3Counter;\nlet interval1Speed;\nlet interval2Speed;\nlet interval3Speed;\nlet powerUpInterval;\nlet startTime; // start race & set interval speeds\n\nconst startRace = () => {\n  startTime = Date.now();\n  interval1Speed = 10000 / car1.speed;\n  interval2Speed = 10000 / car2.speed;\n  interval3Speed = 10000 / car3.speed;\n  lane1Counter = setInterval(car1Counter, interval1Speed);\n  lane2Counter = setInterval(car2Counter, interval2Speed);\n  lane3Counter = setInterval(car3Counter, interval3Speed);\n  powerUpInterval = setInterval(powerUpPosition, 100);\n};\n\nlet lapCount = 0;\nlet i = 0;\nlet lapCount2 = 0;\nlet c = 0;\nlet lapCount3 = 0;\nlet x = 0; // car timers\n\nlet car1Time;\n\nconst car1Counter = () => {\n  if (i < 10) {\n    i++;\n    console.log(\"Car1 Position:\", i);\n  } else if (i === 10) {\n    if (lapCount < 3) {\n      lapCount += 1;\n      console.log(\"Car1 Lap:\", lapCount);\n    } else if (lapCount === 3) {\n      clearInterval(lane1Counter);\n      car1.time = (Date.now() - startTime) / 1000;\n      console.log(\"Car1 has finished the race in\", car1.time, \"seconds\");\n      carTimes.push(car1);\n    }\n\n    i = 0;\n  }\n};\n\nconst car2Counter = () => {\n  if (c < 10) {\n    c++;\n    console.log(\"Car2 Position:\", c);\n  } else if (c === 10) {\n    if (lapCount2 < 3) {\n      lapCount2 += 1;\n      console.log(\"Car2 Lap:\", lapCount2);\n    } else if (lapCount2 === 3) {\n      clearInterval(lane2Counter);\n      car2.time = (Date.now() - startTime) / 1000;\n      console.log(\"Car2 has finished the race in\", car2.time, \"seconds\");\n      carTimes.push(car2);\n    }\n\n    c = 0;\n  }\n};\n\nlet car3Time;\n\nconst car3Counter = () => {\n  if (x < 10) {\n    x++;\n    console.log(\"Car3 Position:\", x);\n  } else if (x === 10) {\n    if (lapCount3 < 3) {\n      lapCount3 += 1;\n      console.log(\"Car3 Lap:\", lapCount3);\n    } else if (lapCount3 === 3) {\n      clearInterval(lane3Counter);\n      car3.time = (Date.now() - startTime) / 1000;\n      console.log(\"Car3 has finished the race in\", car3.time, \"seconds\");\n      carTimes.push(car3);\n    }\n\n    x = 0;\n  }\n};\n\nlet carTimes = [];\nlet firstPlace;\nlet secondPlace;\nlet thirdPlace;\n\nconst Leaderboard = () => {\n  firstPlace = carTimes[0];\n  secondPlace = carTimes[1];\n  thirdPlace = carTimes[2];\n  console.log(firstPlace);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"First place: \", firstPlace]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Second place: \", secondPlace]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Third place: \", thirdPlace]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n}; // powerup rng\n\n\n_c = Leaderboard;\n\nlet positionSpawn = () => {\n  return Math.floor(Math.random() * (10 - 1 + 1)) + 1;\n};\n\nlet laneSpawn = () => {\n  return Math.floor(Math.random() * (3 - 1 + 1)) + 1;\n}; // powerup position & usage\n\n\nconst powerUpPosition = () => {\n  let randPosition = positionSpawn();\n  let randLane = laneSpawn();\n\n  if (randPosition === i && randLane === 1) {\n    console.log(\"Car1 collected SUPREME FUEL!\");\n    clearInterval(lane1Counter);\n    lane1Counter = setInterval(car1Counter, 70);\n    setTimeout(lane1Counter, 200);\n  }\n\n  if (randPosition === c && randLane === 2) {\n    console.log(\"Car2 collected SUPREME FUEL!\");\n    clearInterval(lane2Counter);\n    lane2Counter = setInterval(car2Counter, 70);\n    setTimeout(lane2Counter, 200);\n  }\n\n  if (randPosition === x && randLane === 3) {\n    console.log(\"Car3 collected SUPREME FUEL!\");\n    clearInterval(lane3Counter);\n    lane3Counter = setInterval(car3Counter, 70);\n    setTimeout(lane3Counter, 200);\n  }\n};\n\nconst Track = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TRACK!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startRace,\n      children: \"Start Race!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: Leaderboard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Go back!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Track;\nexport default Track;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Leaderboard\");\n$RefreshReg$(_c2, \"Track\");","map":{"version":3,"sources":["C:/Users/Joel/Documents/Mini-Turbo-Derby/mini-turbo-derby/src/Track.js"],"names":["React","Component","Link","Car","constructor","name","speed","time","weight","acceleration","lane","isBet","setBet","bind","console","log","car1","car2","car3","powerUp","boost","duration","price","supremeFuel","turboBoost","lane1Counter","lane2Counter","lane3Counter","interval1Speed","interval2Speed","interval3Speed","powerUpInterval","startTime","startRace","Date","now","setInterval","car1Counter","car2Counter","car3Counter","powerUpPosition","lapCount","i","lapCount2","c","lapCount3","x","car1Time","clearInterval","carTimes","push","car3Time","firstPlace","secondPlace","thirdPlace","Leaderboard","positionSpawn","Math","floor","random","laneSpawn","randPosition","randLane","setTimeout","Track"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\n\r\n// car constructor\r\nclass Car extends Component {\r\n    constructor(name, speed, time, weight, acceleration, lane, isBet) {\r\n        super();\r\n        this.name = name;\r\n        this.speed = speed;\r\n        this.time = time;\r\n        this.weight = weight;\r\n        this.acceleration = acceleration;\r\n        this.lane = lane;\r\n        this.isBet = isBet;\r\n        this.setBet = this.setBet.bind(this);\r\n    }\r\n\r\n    setBet() {\r\n        this.isBet = true;\r\n        console.log(this.name, this.isBet);\r\n    }\r\n} \r\n\r\n// cars\r\nconst car1 = new Car(1, 100, 0, 200, 5, 1, true);\r\n\r\nconst car2 = new Car(2, 1200, 0, 300, 2, 2, false);\r\n\r\nconst car3 = new Car(3, 90, 0, 150, 7, 3, false);\r\n\r\n// powerup constructor\r\nfunction powerUp(boost, duration, price) {\r\n    this.boost = boost;\r\n    this.duration = duration;\r\n    this.price = price;\r\n}\r\n// powerups\r\nconst supremeFuel = new powerUp(1.25, 2000, 50);\r\n\r\nconst turboBoost = new powerUp(1.5, 4000, 100);\r\n\r\n\r\nlet lane1Counter;\r\nlet lane2Counter;\r\nlet lane3Counter;\r\nlet interval1Speed;\r\nlet interval2Speed;\r\nlet interval3Speed;\r\nlet powerUpInterval;\r\nlet startTime;\r\n\r\n// start race & set interval speeds\r\nconst startRace = () => {\r\n    startTime = Date.now();\r\n    interval1Speed = 10000 / car1.speed;\r\n    interval2Speed = 10000/ car2.speed;\r\n    interval3Speed = 10000/ car3.speed;\r\n    lane1Counter = setInterval(car1Counter, interval1Speed);\r\n    lane2Counter = setInterval(car2Counter, interval2Speed);\r\n    lane3Counter = setInterval(car3Counter, interval3Speed);\r\n    powerUpInterval = setInterval(powerUpPosition, 100);\r\n}\r\n\r\n\r\nlet lapCount = 0;\r\nlet i = 0;\r\n\r\nlet lapCount2 = 0;\r\nlet c = 0;\r\n\r\nlet lapCount3 = 0;\r\nlet x = 0;\r\n\r\n// car timers\r\n\r\nlet car1Time;\r\n\r\nconst car1Counter = () => {\r\n    if (i < 10) {\r\n        i++;\r\n        console.log(\"Car1 Position:\", i);\r\n    } else if (i === 10) {\r\n        if (lapCount < 3) {\r\n            lapCount += 1;\r\n            console.log(\"Car1 Lap:\", lapCount);\r\n        } else if (lapCount === 3) {\r\n            clearInterval(lane1Counter);\r\n            car1.time = (Date.now() - startTime) / 1000;\r\n            console.log(\"Car1 has finished the race in\", car1.time,\"seconds\");\r\n            carTimes.push(car1);\r\n        }\r\n        i = 0;\r\n    }\r\n}\r\n\r\nconst car2Counter = () => {\r\n    if (c < 10) {\r\n        c++;\r\n        console.log(\"Car2 Position:\", c);\r\n    } else if (c === 10) {\r\n        if (lapCount2 < 3) {\r\n            lapCount2 += 1;\r\n            console.log(\"Car2 Lap:\", lapCount2);\r\n        } else if (lapCount2 === 3) {\r\n            clearInterval(lane2Counter);\r\n            car2.time = (Date.now() - startTime) / 1000;\r\n            console.log(\"Car2 has finished the race in\", car2.time,\"seconds\");\r\n            carTimes.push(car2);\r\n        }\r\n        c = 0;\r\n    }\r\n}\r\n\r\nlet car3Time;\r\n\r\nconst car3Counter = () => {\r\n    if (x < 10) {\r\n        x++;\r\n        console.log(\"Car3 Position:\", x);\r\n    } else if (x === 10) {\r\n        if (lapCount3 < 3) {\r\n            lapCount3 += 1;\r\n            console.log(\"Car3 Lap:\", lapCount3);\r\n        } else if (lapCount3 === 3) {\r\n            clearInterval(lane3Counter);\r\n            car3.time = (Date.now() - startTime) / 1000;\r\n            console.log(\"Car3 has finished the race in\", car3.time,\"seconds\");\r\n            carTimes.push(car3);\r\n        }\r\n        x = 0;\r\n    }\r\n}\r\n\r\nlet carTimes = [];\r\nlet firstPlace;\r\nlet secondPlace;\r\nlet thirdPlace;\r\n\r\nconst Leaderboard = () => {\r\n\r\n    firstPlace = carTimes[0];\r\n    secondPlace = carTimes[1];\r\n    thirdPlace = carTimes[2];\r\n    console.log(firstPlace);\r\n\r\n    return (\r\n        <div>\r\n            <p>First place: {firstPlace}</p>\r\n            <p>Second place: {secondPlace}</p>\r\n            <p>Third place: {thirdPlace}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// powerup rng\r\nlet positionSpawn = () => {\r\n    return Math.floor(Math.random() * (10 - 1 + 1)) + 1;\r\n}\r\n\r\nlet laneSpawn = () => {\r\n    return Math.floor(Math.random() * (3 - 1 + 1)) + 1;\r\n}\r\n\r\n// powerup position & usage\r\nconst powerUpPosition = () => {\r\n    let randPosition = positionSpawn();\r\n    let randLane = laneSpawn();\r\n\r\n    if (randPosition === i && randLane === 1) {\r\n        console.log(\"Car1 collected SUPREME FUEL!\");\r\n        clearInterval(lane1Counter);\r\n        lane1Counter = setInterval(car1Counter, 70);\r\n        setTimeout(lane1Counter, 200);\r\n    \r\n    } if (randPosition === c && randLane === 2) {\r\n        console.log(\"Car2 collected SUPREME FUEL!\");\r\n        clearInterval(lane2Counter);\r\n        lane2Counter = setInterval(car2Counter, 70);\r\n        setTimeout(lane2Counter, 200);\r\n  \r\n    } if (randPosition === x && randLane === 3) {\r\n        console.log(\"Car3 collected SUPREME FUEL!\");\r\n        clearInterval(lane3Counter);\r\n        lane3Counter = setInterval(car3Counter, 70);\r\n        setTimeout(lane3Counter, 200);\r\n    }\r\n} \r\n\r\nconst Track = () => {\r\n    return(\r\n        <div>\r\n            <h1>TRACK!</h1>\r\n            <button onClick={startRace}>Start Race!</button>\r\n            <div>\r\n                <h2>Leaderboard</h2>\r\n\r\n                <button onClick={Leaderboard}></button>\r\n                <p></p>\r\n                <p></p>\r\n            </div>\r\n            <Link to=\"/\">\r\n                <button>\r\n                    Go back!\r\n                </button>\r\n            </Link>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Track;"]},"metadata":{},"sourceType":"module"}