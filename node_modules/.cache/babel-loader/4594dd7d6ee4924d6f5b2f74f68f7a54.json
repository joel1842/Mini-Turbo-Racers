{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joel\\\\Documents\\\\Mini-Turbo-Derby\\\\mini-turbo-derby\\\\src\\\\Track.js\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Track = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TRACK!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Go back!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Track;\nlet i = 0;\nlet lapCount = 0;\n\nconst Car = () => {\n  if (i < 10) {\n    i++;\n    console.log(\"Car Position =\", i);\n  } else if (i === 10) {\n    lapCounter();\n    i = 0;\n  }\n};\n\n_c2 = Car;\nlet carInterval = setInterval(Car, 500);\n\nconst lapCounter = () => {\n  if (i === 10) {\n    if (lapCount < 3) {\n      lapCount += 1;\n      console.log(\"Lap:\", lapCount);\n    } else if (lapCount === 3) {\n      console.log(\"Race has ended!\");\n      clearInterval(carInterval);\n    }\n  }\n};\n\nconst supremeFuel = new Object();\nsupremeFuel.boost = 1.25;\nsupremeFuel.price = 50;\n\nconst powerUpPosition = () => {};\n\nfunction randomInteger(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nconsole.log(\"random number:\", randomInteger(1, 11));\nexport default Track;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Track\");\n$RefreshReg$(_c2, \"Car\");","map":{"version":3,"sources":["C:/Users/Joel/Documents/Mini-Turbo-Derby/mini-turbo-derby/src/Track.js"],"names":["Link","Track","i","lapCount","Car","console","log","lapCounter","carInterval","setInterval","clearInterval","supremeFuel","Object","boost","price","powerUpPosition","randomInteger","min","max","Math","floor","random"],"mappings":";AAAA,SACIA,IADJ,QAES,kBAFT;;;AAIA,MAAMC,KAAK,GAAG,MAAM;AAChB,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAZD;;KAAMA,K;AAgBN,IAAIC,CAAC,GAAG,CAAR;AACA,IAAIC,QAAQ,GAAG,CAAf;;AAEA,MAAMC,GAAG,GAAG,MAAM;AACd,MAAIF,CAAC,GAAG,EAAR,EAAY;AACRA,IAAAA,CAAC;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BJ,CAA9B;AACH,GAHD,MAGO,IAAIA,CAAC,KAAK,EAAV,EAAc;AACjBK,IAAAA,UAAU;AACVL,IAAAA,CAAC,GAAG,CAAJ;AACH;AACJ,CARD;;MAAME,G;AAUN,IAAII,WAAW,GAAGC,WAAW,CAACL,GAAD,EAAM,GAAN,CAA7B;;AAEA,MAAMG,UAAU,GAAG,MAAM;AACrB,MAAIL,CAAC,KAAK,EAAV,EAAc;AACV,QAAIC,QAAQ,GAAG,CAAf,EAAkB;AACdA,MAAAA,QAAQ,IAAI,CAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,QAApB;AACH,KAHD,MAGO,IAAIA,QAAQ,KAAK,CAAjB,EAAoB;AACvBE,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAI,MAAAA,aAAa,CAACF,WAAD,CAAb;AACH;AACJ;AACJ,CAVD;;AAYA,MAAMG,WAAW,GAAG,IAAIC,MAAJ,EAApB;AACAD,WAAW,CAACE,KAAZ,GAAoB,IAApB;AACAF,WAAW,CAACG,KAAZ,GAAoB,EAApB;;AAEA,MAAMC,eAAe,GAAG,MAAM,CAAE,CAAhC;;AAEA,SAASC,aAAT,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC7B,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAvB,CAAX,IAA2CA,GAAlD;AACH;;AAEDZ,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BU,aAAa,CAAC,CAAD,EAAI,EAAJ,CAA3C;AAEA,eAAef,KAAf","sourcesContent":["import {\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nconst Track = () => {\r\n    return(\r\n        <div>\r\n            <h1>TRACK!</h1>\r\n            <Link to=\"/\">\r\n                <button>\r\n                    Go back!\r\n                </button>\r\n            </Link>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\nlet i = 0;\r\nlet lapCount = 0;\r\n\r\nconst Car = () => {\r\n    if (i < 10) {\r\n        i++;\r\n        console.log(\"Car Position =\", i);\r\n    } else if (i === 10) {\r\n        lapCounter();\r\n        i = 0;\r\n    }\r\n}\r\n\r\nlet carInterval = setInterval(Car, 500);\r\n\r\nconst lapCounter = () => {\r\n    if (i === 10) {\r\n        if (lapCount < 3) {\r\n            lapCount += 1;\r\n            console.log(\"Lap:\", lapCount);\r\n        } else if (lapCount === 3) {\r\n            console.log(\"Race has ended!\");\r\n            clearInterval(carInterval);\r\n        }\r\n    }\r\n}\r\n\r\nconst supremeFuel = new Object();\r\nsupremeFuel.boost = 1.25;\r\nsupremeFuel.price = 50;\r\n\r\nconst powerUpPosition = () => {}\r\n\r\nfunction randomInteger(min, max) {\r\n    return Math.floor(Math.random() * (max - min) ) + min; \r\n}\r\n\r\nconsole.log(\"random number:\", randomInteger(1, 11));\r\n\r\nexport default Track;"]},"metadata":{},"sourceType":"module"}