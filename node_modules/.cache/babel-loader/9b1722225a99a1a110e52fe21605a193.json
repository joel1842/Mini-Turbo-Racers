{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joel\\\\Documents\\\\Mini-Turbo-Derby\\\\mini-turbo-derby\\\\src\\\\Track.js\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Track = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TRACK!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Go back!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}; // let i = 0;\n// let lapCount = 0;\n// const carPosition = () => {\n//     if (i < 10) {\n//         i++;\n//         console.log(\"Car Position =\", i);\n//     } else if (i === 10) {\n//         lapCounter();\n//         i = 0;\n//     }\n// }\n// const lapCounter = () => {\n//     if (i === 10) {\n//         if (lapCount < 3) {\n//             lapCount += 1;\n//             console.log(\"Lap:\", lapCount);\n//         } else if (lapCount === 3) {\n//             console.log(\"Race has ended!\");\n//             clearInterval(carInterval);\n//         }\n//     }\n// }\n// function powerUp(boost, duration, price) {\n//     this.boost = boost;\n//     this.duration = duration;\n//     this.price = price;\n// }\n// const supremeFuel = new powerUp(1.25, 2000, 50);\n// const turboBoost = new powerUp(1.5, 4000, 100);\n// let positionSpawn = () => {\n//     return Math.floor(Math.random() * (10 - 1 + 1)) + 1;\n// }\n// // for when lanes are added\n// // let laneSpawn = () => {\n// //     return Math.floor(Math.random() * (3 - 1 + 1)) + 1;\n// // }\n// const powerUpPosition = () => {\n//     let randPosition = positionSpawn();\n//     // for when lanes are added\n//     // let randLane = laneSpawn();\n//     if (randPosition === i) {\n//         console.log(\"SUPREME FUEL COLLECTED!\");\n//         carInterval = setInterval(carPosition, 200);\n//     } \n// }\n// let powerUpInterval = setInterval(powerUpPosition, 5000);\n\n\n_c = Track;\n\nfunction car(speed, weight, acceleration, lane, isBet) {\n  this.speed = speed;\n  this.weight = weight;\n  this.acceleration = acceleration;\n  this.lane = lane;\n}\n\nconst car1 = new car(100, 200, 5, 1, true);\nconst car2 = new car(120, 300, 2, 2, false);\nconst car3 = new car(90, 150, 7, 3, false); // let carInterval = setInterval(carPosition, 500);\n\nlet activeCars = [];\n\nconst startRace = () => {\n  activeCars.push(car1, car2, car3);\n  console.log(activeCars);\n};\n\nstartRace();\nexport default Track;\n\nvar _c;\n\n$RefreshReg$(_c, \"Track\");","map":{"version":3,"sources":["C:/Users/Joel/Documents/Mini-Turbo-Derby/mini-turbo-derby/src/Track.js"],"names":["Link","Track","car","speed","weight","acceleration","lane","isBet","car1","car2","car3","activeCars","startRace","push","console","log"],"mappings":";AAAA,SACIA,IADJ,QAES,kBAFT;;;AAIA,MAAMC,KAAK,GAAG,MAAM;AAChB,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAZD,C,CAcA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;KApEMA,K;;AAsEN,SAASC,GAAT,CAAaC,KAAb,EAAoBC,MAApB,EAA4BC,YAA5B,EAA0CC,IAA1C,EAAgDC,KAAhD,EAAuD;AACnD,OAAKJ,KAAL,GAAaA,KAAb;AACA,OAAKC,MAAL,GAAcA,MAAd;AACA,OAAKC,YAAL,GAAoBA,YAApB;AACA,OAAKC,IAAL,GAAYA,IAAZ;AACH;;AAED,MAAME,IAAI,GAAG,IAAIN,GAAJ,CAAQ,GAAR,EAAa,GAAb,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,IAAxB,CAAb;AAEA,MAAMO,IAAI,GAAG,IAAIP,GAAJ,CAAQ,GAAR,EAAa,GAAb,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,KAAxB,CAAb;AAEA,MAAMQ,IAAI,GAAG,IAAIR,GAAJ,CAAQ,EAAR,EAAY,GAAZ,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,KAAvB,CAAb,C,CAIA;;AAEA,IAAIS,UAAU,GAAG,EAAjB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpBD,EAAAA,UAAU,CAACE,IAAX,CAAgBL,IAAhB,EAAsBC,IAAtB,EAA4BC,IAA5B;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACH,CAHD;;AAKAC,SAAS;AAET,eAAeX,KAAf","sourcesContent":["import {\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nconst Track = () => {\r\n    return(\r\n        <div>\r\n            <h1>TRACK!</h1>\r\n            <Link to=\"/\">\r\n                <button>\r\n                    Go back!\r\n                </button>\r\n            </Link>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n// let i = 0;\r\n// let lapCount = 0;\r\n\r\n// const carPosition = () => {\r\n//     if (i < 10) {\r\n//         i++;\r\n//         console.log(\"Car Position =\", i);\r\n//     } else if (i === 10) {\r\n//         lapCounter();\r\n//         i = 0;\r\n//     }\r\n// }\r\n\r\n// const lapCounter = () => {\r\n//     if (i === 10) {\r\n//         if (lapCount < 3) {\r\n//             lapCount += 1;\r\n//             console.log(\"Lap:\", lapCount);\r\n//         } else if (lapCount === 3) {\r\n//             console.log(\"Race has ended!\");\r\n//             clearInterval(carInterval);\r\n//         }\r\n//     }\r\n// }\r\n\r\n// function powerUp(boost, duration, price) {\r\n//     this.boost = boost;\r\n//     this.duration = duration;\r\n//     this.price = price;\r\n// }\r\n\r\n// const supremeFuel = new powerUp(1.25, 2000, 50);\r\n\r\n// const turboBoost = new powerUp(1.5, 4000, 100);\r\n\r\n// let positionSpawn = () => {\r\n//     return Math.floor(Math.random() * (10 - 1 + 1)) + 1;\r\n// }\r\n\r\n// // for when lanes are added\r\n// // let laneSpawn = () => {\r\n// //     return Math.floor(Math.random() * (3 - 1 + 1)) + 1;\r\n// // }\r\n\r\n// const powerUpPosition = () => {\r\n//     let randPosition = positionSpawn();\r\n//     // for when lanes are added\r\n//     // let randLane = laneSpawn();\r\n//     if (randPosition === i) {\r\n//         console.log(\"SUPREME FUEL COLLECTED!\");\r\n//         carInterval = setInterval(carPosition, 200);\r\n//     } \r\n// }\r\n\r\n// let powerUpInterval = setInterval(powerUpPosition, 5000);\r\n\r\nfunction car(speed, weight, acceleration, lane, isBet) {\r\n    this.speed = speed;\r\n    this.weight = weight;\r\n    this.acceleration = acceleration;\r\n    this.lane = lane;\r\n}\r\n\r\nconst car1 = new car(100, 200, 5, 1, true);\r\n\r\nconst car2 = new car(120, 300, 2, 2, false);\r\n\r\nconst car3 = new car(90, 150, 7, 3, false);\r\n\r\n\r\n\r\n// let carInterval = setInterval(carPosition, 500);\r\n\r\nlet activeCars = [];\r\n\r\nconst startRace = () => {\r\n    activeCars.push(car1, car2, car3);\r\n    console.log(activeCars);\r\n}\r\n\r\nstartRace();\r\n\r\nexport default Track;"]},"metadata":{},"sourceType":"module"}